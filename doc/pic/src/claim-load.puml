@startuml
skinparam ParticipantPadding 20
skinparam BoxPadding 20

title Claim Load Sequence

box "Indy" #LightBlue
    participant "Ledger" as ledger
endbox

actor "Prover/Holder\n(The Org Book)\nAgent" as obag
actor "Issuer\n(BC Registrar)\nAgent" as bcrag
actor "Actuator" as ator

ator -> obag: GET <get-did>
obag --> ator: DID

=== CLAIM LOAD SEQUENCE ==
note over ledger, ator
All agent service wrapper APIs are up
Schema, claim definitions are on ledger
endnote

ator -> bcrag: POST <claim-hello>, proxy by Prover/Holder DID
bcrag -> ledger: get endpoint for Prover/Holder DID
ledger --> bcrag: Prover/Holder endpoint
bcrag -> obag: POST <claim-hello>
obag -> obag: get schema from cache
obag -> obag: store claim offer
obag -> ledger: get claim definition
ledger --> obag: claim definition
obag -> obag: store claim request
obag --> bcrag: claim request
bcrag --> ator: claim request

loop for each claim
    ator -> bcrag: POST <claim-create>
    bcrag -> bcrag: create claim
    bcrag --> ator: claim
    ator -> bcrag: POST <claim-store>, proxy by Prover/Holder DID
    bcrag -> ledger: get endpoint for Prover/Holder DID
    ledger --> bcrag: Prover/Holder endpoint
    bcrag -> obag: POST <claim-store>
    obag -> obag: store claim
    obag --> bcrag: returns
    bcrag --> ator: returns
    
end

@enduml

